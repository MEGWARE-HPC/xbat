name: Build and Test xbat daemon

on:
  push:
    branches:
      - ci-testing
  pull_request:
    branches:
      - ci-testing

jobs:
  build-el8:
    name: Build for AlmaLinux 8
    runs-on: ubuntu-latest
    outputs:
      rpm_name: ${{ steps.get_rpm.outputs.rpm_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Build with build.sh (el8)
        working-directory: src/xbatd
        run: ./build.sh 1.0.0 --release rc0 --distro el8 --executor docker

      - name: Find RPM (el8)
        id: get_rpm
        working-directory: src/xbatd
        run: |
          RPM_NAME=$(ls xbatd-1.0.0-rc0.el8*.rpm)
          echo "Found RPM: $RPM_NAME"
          echo "rpm_name=$RPM_NAME" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-el8
          path: src/xbatd/xbatd-1.0.0-rc0.el8*.rpm

  build-el9:
    name: Build for AlmaLinux 9
    runs-on: ubuntu-latest
    outputs:
      rpm_name: ${{ steps.get_rpm.outputs.rpm_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Build with build.sh (el9)
        working-directory: src/xbatd
        run: ./build.sh 1.0.0 --release rc0 --distro el9 --executor docker

      - name: Find RPM (el9)
        id: get_rpm
        working-directory: src/xbatd
        run: |
          RPM_NAME=$(ls xbatd-1.0.0-rc0.el9*.rpm)
          echo "Found RPM: $RPM_NAME"
          echo "rpm_name=$RPM_NAME" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-el9
          path: src/xbatd/xbatd-1.0.0-rc0.el9*.rpm

  install-el8:
    name: Install and Test on AlmaLinux 8
    needs: build-el8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: rpm-el8
          path: ./rpm_dir

      - name: Run AlmaLinux 8 container, install RPM and setup.sh install/uninstall test
        run: |
          docker run --rm -v ${{ github.workspace }}:/workdir -w /workdir almalinux:8 /bin/bash -c "
            dnf install -y ./rpm_dir/xbatd-1.0.0-rc0.el8*.rpm && \
            cd src/xbat && \
            ./setup.sh install --home-mnt /home/ --executor docker --workers 4 && \
            if [ -f /usr/bin/xbatd ]; then echo 'xbatd binary exists'; else echo 'xbatd missing' && exit 1; fi && \
            ./setup.sh uninstall && \
            dnf remove -y xbatd
          "

  install-el9:
    name: Install and Test on AlmaLinux 9
    needs: build-el9
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: rpm-el9
          path: ./rpm_dir

      - name: Run AlmaLinux 9 container, prepare env, install RPM and setup.sh install/uninstall test
        run: |
          docker run --rm -v ${{ github.workspace }}:/workdir -w /workdir almalinux:9 /bin/bash -c "
            dnf install -y epel-release dnf-utils python3-pip && \
            dnf config-manager --set-enabled crb && \
            dnf update -y && \
            pip3 install wheel && \
            dnf install -y https://repo.radeon.com/amdgpu-install/6.4.1/rhel/9.6/amdgpu-install-6.4.60401-1.el9.noarch.rpm && \
            sed -i 's|/el/9.6/|/el/9.2/|g' /etc/yum.repos.d/amdgpu*.repo && \
            dnf install -y ./rpm_dir/xbatd-1.0.0-rc0.el9*.rpm && \
            cd src/xbat && \
            ./setup.sh install --home-mnt /home/ --executor docker --workers 4 && \
            if [ -f /usr/bin/xbatd ]; then echo 'xbatd binary exists'; else echo 'xbatd missing' && exit 1; fi && \
            ./setup.sh uninstall && \
            dnf remove -y xbatd
          "
