name: Build and Test xbat daemon
# Trigger-Test, keine Ã„nderung an der Logik

on:
  push:
    branches:
      - ci-testing
  pull_request:
    branches:
      - ci-testing

jobs:
  build-el8:
    name: Build for AlmaLinux 8
    runs-on: ubuntu-latest
    outputs:
      rpm_name: ${{ steps.get_rpm.outputs.rpm_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Build with build.sh (el8)
        working-directory: src/xbatd
        run: ./build.sh 1.0.0 --release rc0 --distro el8 --executor docker

      - name: Find RPM (el8)
        id: get_rpm
        working-directory: src/xbatd
        run: |
          RPM_NAME=$(ls xbatd-1.0.0-rc0.el8*.rpm)
          echo "Found RPM: $RPM_NAME"
          echo "rpm_name=$RPM_NAME" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-el8
          path: src/xbatd/xbatd-1.0.0-rc0.el8*.rpm

  build-el9:
    name: Build for AlmaLinux 9
    runs-on: ubuntu-latest
    outputs:
      rpm_name: ${{ steps.get_rpm.outputs.rpm_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Build with build.sh (el9)
        working-directory: src/xbatd
        run: ./build.sh 1.0.0 --release rc0 --distro el9 --executor docker

      - name: Find RPM (el9)
        id: get_rpm
        working-directory: src/xbatd
        run: |
          RPM_NAME=$(ls xbatd-1.0.0-rc0.el9*.rpm)
          echo "Found RPM: $RPM_NAME"
          echo "rpm_name=$RPM_NAME" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-el9
          path: src/xbatd/xbatd-1.0.0-rc0.el9*.rpm

  install-el8:
    name: Install test on AlmaLinux 8
    needs: build-el8
    runs-on: ubuntu-latest
    container:
      image: almalinux:8
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rpm-el8
          path: /rpm_dir

      - name: Install RPM (el8)
        run: dnf install -y /rpm_dir/xbatd-1.0.0-rc0.el8*.rpm

      - name: Remove RPM (el8)
        run: dnf remove -y xbatd || true

  install-el9:
    name: Install test on AlmaLinux 9
    needs: build-el9
    runs-on: ubuntu-latest
    container:
      image: almalinux:9
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rpm-el9
          path: /rpm_dir

      - name: Prepare AlmaLinux 9 for dependencies
        run: |
          dnf install -y epel-release dnf-utils python3-pip
          dnf config-manager --set-enabled crb
          dnf update -y
          pip3 install wheel
          dnf install -y https://repo.radeon.com/amdgpu-install/6.4.1/rhel/9.6/amdgpu-install-6.4.60401-1.el9.noarch.rpm
          sed -i 's|/el/9.6/|/el/9.2/|g' /etc/yum.repos.d/amdgpu*.repo

      - name: Install RPM (el9)
        run: dnf install -y /rpm_dir/xbatd-1.0.0-rc0.el9*.rpm

      - name: Remove RPM (el9)
        run: dnf remove -y xbatd || true

  install-service-el8:
    name: Install and uninstall xbat service on AlmaLinux 8 (rootless podman)
    needs: install-el8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Podman & podman-compose on Ubuntu runner
      run: |
        sudo apt-get update
        sudo apt-get install -y podman podman-compose
        podman --version
    - name: Install dependencies inside AlmaLinux 8 container (incl. podman-compose)
      run: |
        podman run --rm -v .:/workspace:Z -w /workspace almalinux:8 sh -c "
          dnf update -y &&
          dnf install -y epel-release dnf-utils python3-pip python3-devel gcc make rsync wget podman &&
          pip3 install wheel podman-compose &&
          chmod +x ./setup.sh &&
          ./setup.sh install --home-mnt /home/ --executor podman --workers 4 &&
          ./setup.sh uninstall
        "

  install-service-el9:
    name: Install and uninstall xbat service on AlmaLinux 9 (rootless podman)
    needs: install-el9
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Podman & podman-compose on Ubuntu runner  
      run: |
        sudo apt-get update
        sudo apt-get install -y podman podman-compose
        podman --version
    - name: Install dependencies inside AlmaLinux 9 container (incl. podman-compose)
      run: |
        podman run --rm -v .:/workspace:Z -w /workspace almalinux:9 sh -c "
          dnf update -y &&
          dnf install -y epel-release dnf-utils python3-pip python3-devel gcc make rsync wget podman &&
          pip3 install wheel podman-compose &&
          dnf config-manager --set-enabled crb &&
          dnf install -y https://repo.radeon.com/amdgpu-install/6.4.1/rhel/9.6/amdgpu-install-6.4.60401-1.el9.noarch.rpm &&
          sed -i 's|/el/9.6/|/el/9.2/|g' /etc/yum.repos.d/amdgpu*.repo &&
          dnf clean all &&
          chmod +x ./setup.sh &&
          ./setup.sh install --home-mnt /home/ --executor podman --workers 4 &&
          ./setup.sh uninstall
        "






